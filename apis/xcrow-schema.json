{
  "swagger": "2.0",
  "info": {
    "title": "useXcrow - Open API",
    "description": "useXcrow is a decentralized escrow service that allows users to create and manage contracts securely. The API provides endpoints for user authentication, contract management, and dispute resolution.",
    "termsOfService": "https://usexcrow.com/terms/",
    "contact": {
      "email": "contact@xcrow.com"
    },
    "license": {
      "name": "BSD License"
    },
    "version": "v1"
  },
  "host": "dev.api.usexcrow.com",
  "schemes": ["https"],
  "basePath": "/v1",
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ],
  "tags": [
    {
      "name": "accounts",
      "description": "User account management"
    },
    {
      "name": "escrow",
      "description": "Escrow contract management"
    },
    {
      "name": "company",
      "description": "Company management"
    }
  ],
  "paths": {
    "/accounts/login/": {
      "post": {
        "summary": "Login",
        "operationId": "accounts_login_create",
        "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VerifiedTokenObtainPair"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VerifiedTokenObtainPairResponse"
            }
          }
        },
        "tags": ["accounts"]
      },
      "parameters": []
    },
    "/accounts/me/": {
      "get": {
        "operationId": "accounts_me_list",
        "summary": "Get authenticated user ",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "tags": ["accounts"]
      },
      "parameters": []
    },
    "/accounts/otp/": {
      "post": {
        "operationId": "accounts_otp_create",
        "description": "Confirm the OTP code sent to the user's email.",
        "summary": "Send OTP",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "required": ["otp"],
              "type": "object",
              "properties": {
                "otp": {
                  "description": "The OTP code sent to the user's email.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OTP verified successfully."
          },
          "400": {
            "description": "Invalid OTP."
          }
        },
        "tags": ["accounts"]
      },
      "parameters": []
    },
    "/accounts/refresh/": {
      "post": {
        "summary": "Refresh token",
        "operationId": "accounts_refresh_create",
        "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TokenRefresh"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TokenRefresh"
            }
          }
        },
        "tags": ["accounts"]
      },
      "parameters": []
    },
    "/escrow/banks/all_banks/": {
      "get": {
        "operationId": "escrow_banks_all_banks",
        "summary": "List all banks",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WithdrawalAccount"
              }
            }
          }
        },
        "tags": ["escrow"]
      },
      "parameters": []
    },
    "/escrow/contract/classic/": {
      "get": {
        "operationId": "escrow_contract_classic_list",
        "description": "List all classic contracts attached to the user",
        "summary": "List all classic contracts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClassicContract"
              }
            }
          }
        },
        "tags": ["escrow"]
      },
      "post": {
        "operationId": "escrow_contract_classic_create",
        "description": "",
        "summary": "Create a new classic contract",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "required": ["contract", "counterparty"],
              "type": "object",
              "properties": {
                "contract": {
                  "type": "object"
                },
                "counterparty": {
                  "required": ["email", "phone"],
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "phone": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Contract created successfully",
            "schema": {
              "$ref": "#/definitions/WagerContract"
            }
          },
          "400": {
            "description": "Invalid Contract"
          }
        },
        "tags": ["escrow"]
      },
      "parameters": []
    },
    "/escrow/contract/classic/{uuid}/": {
      "get": {
        "operationId": "escrow_contract_classic_read",
        "description": "",
        "summary": "Get specific classic contract",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClassicContract"
            }
          }
        },
        "tags": ["escrow"]
      },
      "put": {
        "operationId": "escrow_contract_classic_update",
        "description": "",
        "summary": "Update classic contract",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClassicContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClassicContract"
            }
          }
        },
        "tags": ["escrow"]
      },
      "patch": {
        "operationId": "escrow_contract_classic_partial_update",
        "description": "",
        "summary": "Partially update classic contract",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClassicContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClassicContract"
            }
          }
        },
        "tags": ["escrow"]
      },
      "parameters": [
        {
          "name": "uuid",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/escrow/contract/classic/{uuid}/update_status/": {
      "put": {
        "operationId": "escrow_contract_classic_update_status",
        "description": "",
        "summary": "Update status of classic contract",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClassicContractUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClassicContractUpdate"
            }
          }
        },
        "tags": ["escrow"]
      },
      "parameters": [
        {
          "name": "uuid",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/escrow/contract/wager/": {
      "get": {
        "operationId": "escrow_contract_wager_list",
        "description": "List all wager contracts attached to the user",
        "summary": "List all wager contracts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WagerContract"
              }
            }
          }
        },
        "tags": ["escrow"]
      },
      "post": {
        "operationId": "escrow_contract_wager_create",
        "summary": "Create a new wager contract",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "required": ["contract", "counterparty"],
              "type": "object",
              "properties": {
                "contract": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "currency": {
                      "type": "string",
                      "enum": ["USD", "EUR", "GBP"]
                    }
                  }
                },
                "adjudicator": {
                  "required": ["email"],
                  "type": "object",
                  "properties": {
                    "email": {
                      "description": "Email or username",
                      "type": "string",
                      "format": "email"
                    },
                    "phone": {
                      "type": "string"
                    }
                  }
                },
                "counterparty": {
                  "required": ["email"],
                  "type": "object",
                  "properties": {
                    "email": {
                      "description": "Email or username",
                      "type": "string",
                      "format": "email"
                    },
                    "phone": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Contract created successfully",
            "schema": {
              "$ref": "#/definitions/WagerContract"
            }
          },
          "400": {
            "description": "Invalid Contract"
          }
        },
        "tags": ["escrow"]
      },
      "parameters": []
    },
    "/escrow/contract/wager/{uuid}/": {
      "get": {
        "operationId": "escrow_contract_wager_read",
        "description": "",
        "summary": "Get specific wager contract",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WagerContract"
            }
          }
        },
        "tags": ["escrow"]
      },
      "put": {
        "operationId": "escrow_contract_wager_update",
        "description": "",
        "summary": "Update wager contract",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WagerContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WagerContract"
            }
          }
        },
        "tags": ["escrow"]
      },
      "patch": {
        "operationId": "escrow_contract_wager_partial_update",
        "description": "",
        "summary": "Partially update wager contract",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WagerContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WagerContract"
            }
          }
        },
        "tags": ["escrow"]
      },
      "parameters": [
        {
          "name": "uuid",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/escrow/contract/wager/{uuid}/update_status/": {
      "put": {
        "operationId": "escrow_contract_wager_update_status",
        "description": "",
        "summary": "Update status of wager contract",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WagerContractUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WagerContractUpdate"
            }
          }
        },
        "tags": ["escrow"]
      },
      "parameters": [
        {
          "name": "uuid",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/escrow/disputes/": {
      "get": {
        "operationId": "escrow_disputes_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Dispute"
              }
            }
          }
        },
        "tags": ["escrow"]
      },
      "post": {
        "operationId": "escrow_disputes_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisputeCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DisputeCreate"
            }
          }
        },
        "tags": ["escrow"]
      },
      "parameters": []
    },
    "/escrow/disputes/{dispute_pk}/evidence/": {
      "get": {
        "operationId": "escrow_disputes_evidence_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DisputeEvidence"
              }
            }
          }
        },
        "tags": ["escrow"]
      },
      "post": {
        "operationId": "escrow_disputes_evidence_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisputeEvidence"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DisputeEvidence"
            }
          }
        },
        "tags": ["escrow"]
      },
      "parameters": [
        {
          "name": "dispute_pk",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/escrow/disputes/{dispute_pk}/evidence/{id}/": {
      "get": {
        "operationId": "escrow_disputes_evidence_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DisputeEvidence"
            }
          }
        },
        "tags": ["escrow"]
      },
      "put": {
        "operationId": "escrow_disputes_evidence_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisputeEvidence"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DisputeEvidence"
            }
          }
        },
        "tags": ["escrow"]
      },
      "patch": {
        "operationId": "escrow_disputes_evidence_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisputeEvidence"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DisputeEvidence"
            }
          }
        },
        "tags": ["escrow"]
      },
      "delete": {
        "operationId": "escrow_disputes_evidence_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["escrow"]
      },
      "parameters": [
        {
          "name": "dispute_pk",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/escrow/disputes/{dispute_pk}/messages/": {
      "get": {
        "operationId": "escrow_disputes_messages_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DisputeMessage"
              }
            }
          }
        },
        "tags": ["escrow"]
      },
      "post": {
        "operationId": "escrow_disputes_messages_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisputeMessage"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DisputeMessage"
            }
          }
        },
        "tags": ["escrow"]
      },
      "parameters": [
        {
          "name": "dispute_pk",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/escrow/disputes/{dispute_pk}/messages/{id}/": {
      "get": {
        "operationId": "escrow_disputes_messages_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DisputeMessage"
            }
          }
        },
        "tags": ["escrow"]
      },
      "put": {
        "operationId": "escrow_disputes_messages_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisputeMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DisputeMessage"
            }
          }
        },
        "tags": ["escrow"]
      },
      "patch": {
        "operationId": "escrow_disputes_messages_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisputeMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DisputeMessage"
            }
          }
        },
        "tags": ["escrow"]
      },
      "delete": {
        "operationId": "escrow_disputes_messages_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["escrow"]
      },
      "parameters": [
        {
          "name": "dispute_pk",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/escrow/disputes/{dispute_pk}/messages/{id}/add_images/": {
      "post": {
        "operationId": "escrow_disputes_messages_add_images",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisputeMessage"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DisputeMessage"
            }
          }
        },
        "tags": ["escrow"]
      },
      "parameters": [
        {
          "name": "dispute_pk",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/escrow/disputes/{id}/": {
      "get": {
        "operationId": "escrow_disputes_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Dispute"
            }
          }
        },
        "tags": ["escrow"]
      },
      "put": {
        "operationId": "escrow_disputes_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dispute"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Dispute"
            }
          }
        },
        "tags": ["escrow"]
      },
      "patch": {
        "operationId": "escrow_disputes_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dispute"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Dispute"
            }
          }
        },
        "tags": ["escrow"]
      },
      "delete": {
        "operationId": "escrow_disputes_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["escrow"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/escrow/disputes/{id}/resolve/": {
      "post": {
        "operationId": "escrow_disputes_resolve",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dispute"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Dispute"
            }
          }
        },
        "tags": ["escrow"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/escrow/disputes/{id}/send_message/": {
      "post": {
        "operationId": "escrow_disputes_send_message",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dispute"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Dispute"
            }
          }
        },
        "tags": ["escrow"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/escrow/disputes/{id}/submit_evidence/": {
      "post": {
        "operationId": "escrow_disputes_submit_evidence",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dispute"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Dispute"
            }
          }
        },
        "tags": ["escrow"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    }
  },
  "definitions": {
    "ChangePassword": {
      "required": ["current_password", "new_password"],
      "type": "object",
      "properties": {
        "current_password": {
          "title": "Current password",
          "type": "string",
          "minLength": 1
        },
        "new_password": {
          "title": "New password",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "VerifiedTokenObtainPair": {
      "required": ["email", "password"],
      "type": "object",
      "properties": {
        "email": {
          "title": "Email",
          "type": "string",
          "minLength": 1
        },
        "password": {
          "title": "Password",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "VerifiedTokenObtainPairResponse": {
      "type": "object",
      "properties": {
        "access": {
          "title": "Access",
          "type": "string",
          "minLength": 1
        },
        "refresh": {
          "title": "Refresh",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "User": {
      "required": ["username", "email"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "username": {
          "title": "Username",
          "type": "string",
          "maxLength": 150,
          "minLength": 1
        },
        "email": {
          "title": "Email address",
          "type": "string",
          "format": "email",
          "maxLength": 254,
          "minLength": 1
        },
        "password": {
          "title": "Password",
          "type": "string",
          "minLength": 1
        },
        "first_name": {
          "title": "First name",
          "type": "string",
          "maxLength": 150
        },
        "last_name": {
          "title": "Last name",
          "type": "string",
          "maxLength": 150
        },
        "is_active": {
          "title": "Active",
          "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
          "type": "boolean",
          "readOnly": true
        },
        "role": {
          "title": "Role",
          "type": "string",
          "enum": ["A", "B"]
        },
        "date_joined": {
          "title": "Date joined",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "status": {
          "title": "Status",
          "type": "string",
          "readOnly": true
        },
        "phone": {
          "title": "Phone",
          "type": "string",
          "maxLength": 200,
          "minLength": 1,
          "x-nullable": true
        },
        "gender": {
          "title": "Gender",
          "type": "string",
          "enum": ["MALE", "FEMALE", "OTHERS"]
        },
        "tier": {
          "title": "Tier",
          "type": "integer",
          "readOnly": true,
          "default": 1
        },
        "is_verified_for_login": {
          "title": "Is verified for login",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TokenRefresh": {
      "required": ["refresh"],
      "type": "object",
      "properties": {
        "refresh": {
          "title": "Refresh",
          "type": "string",
          "minLength": 1
        },
        "access": {
          "title": "Access",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        }
      }
    },
    "WithdrawalAccount": {
      "required": ["bank_name", "account_number", "account_name"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "bank_name": {
          "title": "Bank name",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "account_number": {
          "title": "Account Number",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "account_name": {
          "title": "Account Name",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "user": {
          "title": "User",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "Wallet": {
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "total_transactions": {
          "title": "Total transactions",
          "type": "string",
          "readOnly": true
        },
        "total_income": {
          "title": "Total income",
          "type": "string",
          "readOnly": true
        },
        "currency": {
          "title": "Currency",
          "type": "string",
          "enum": ["USD", "NGN", "EUR", "GBP"]
        },
        "balance": {
          "title": "Balance",
          "type": "number"
        },
        "user": {
          "title": "User",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "ClassicContract": {
      "required": [
        "title",
        "amount",
        "description",
        "currency",
        "creator",
        "creator_role",
        "product_name",
        "inspection_period"
      ],
      "type": "object",
      "properties": {
        "created_on": {
          "title": "Created on",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "title": {
          "title": "Title",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "uuid": {
          "title": "Uuid",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "status": {
          "title": "Status",
          "type": "string",
          "enum": [
            "AGREEMENT",
            "REJECTED",
            "PAYMENT",
            "DELIVERY",
            "INSPECTION",
            "APPEAL",
            "COMPLETED"
          ],
          "readOnly": true
        },
        "category": {
          "title": "Category",
          "type": "string",
          "readOnly": true
        },
        "amount": {
          "title": "Amount",
          "type": "number"
        },
        "description": {
          "title": "Description",
          "type": "string",
          "minLength": 1
        },
        "currency": {
          "title": "Currency",
          "type": "string",
          "enum": ["USD", "NGN", "EUR", "GBP"]
        },
        "creator": {
          "title": "Creator",
          "type": "integer"
        },
        "creator_role": {
          "title": "Creator role",
          "type": "integer",
          "enum": [1, 2]
        },
        "wallet": {
          "$ref": "#/definitions/Wallet"
        },
        "counterparty": {
          "title": "Counterparty",
          "type": "integer",
          "x-nullable": true
        },
        "product_name": {
          "title": "Product name",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "inspection_period": {
          "title": "Inspection period",
          "description": "Inspection period in days - 0 indicates immediate",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "delivery_fee": {
          "title": "Delivery fee",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0
        },
        "status_history": {
          "title": "Status history",
          "type": "object"
        }
      }
    },
    "WagerContract": {
      "required": ["title", "amount", "description", "currency", "creator"],
      "type": "object",
      "properties": {
        "created_on": {
          "title": "Created on",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "title": {
          "title": "Title",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "uuid": {
          "title": "Uuid",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "status": {
          "title": "Status",
          "type": "string",
          "enum": ["ACCEPTED", "PROGRESS", "COMPLETED"],
          "readOnly": true
        },
        "category": {
          "title": "Category",
          "type": "string",
          "readOnly": true
        },
        "amount": {
          "title": "Amount",
          "type": "number"
        },
        "wallet": {
          "$ref": "#/definitions/Wallet"
        },
        "description": {
          "title": "Description",
          "type": "string",
          "minLength": 1
        },
        "currency": {
          "title": "Currency",
          "type": "string",
          "enum": ["USD", "NGN", "EUR", "GBP"]
        },
        "creator": {
          "title": "Creator",
          "type": "integer"
        },
        "counterparty": {
          "title": "Counterparty",
          "type": "integer",
          "x-nullable": true
        },
        "adjudicator": {
          "title": "Adjudicator",
          "type": "integer",
          "x-nullable": true
        },
        "status_history": {
          "title": "Status history",
          "type": "object"
        }
      }
    },
    "ClassicContractUpdate": {
      "required": ["status"],
      "type": "object",
      "properties": {
        "status": {
          "title": "Status",
          "type": "string",
          "enum": [
            "PAYMENT",
            "AGREEMENT",
            "REJECTED",
            "DELIVERY",
            "INSPECTION",
            "ESCALATION",
            "APPEAL"
          ]
        },
        "state": {
          "title": "State",
          "type": "string",
          "enum": ["end", "start"]
        }
      }
    },
    "WagerContractUpdate": {
      "required": ["status", "state"],
      "type": "object",
      "properties": {
        "status": {
          "title": "Status",
          "type": "string",
          "enum": ["ACCEPTED", "PROGRESS", "COMPLETED"]
        },
        "state": {
          "title": "State",
          "type": "string",
          "enum": ["end", "start"]
        }
      }
    },
    "MessageImage": {
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "image": {
          "title": "Image",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "image_url": {
          "title": "Image url",
          "type": "string",
          "readOnly": true
        },
        "uploaded_at": {
          "title": "Uploaded at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "DisputeMessage": {
      "required": ["message"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "message": {
          "title": "Message",
          "type": "string",
          "minLength": 1
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "is_admin_message": {
          "title": "Is admin message",
          "type": "boolean",
          "readOnly": true
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageImage"
          },
          "readOnly": true
        }
      }
    },
    "DisputeEvidence": {
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "image": {
          "title": "Image",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "image_url": {
          "title": "Image url",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "title": "Description",
          "type": "string"
        },
        "uploaded_by": {
          "$ref": "#/definitions/User"
        },
        "uploaded_at": {
          "title": "Uploaded at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "Dispute": {
      "required": ["contract"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "contract": {
          "title": "Contract",
          "type": "integer"
        },
        "contract_title": {
          "title": "Contract title",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "contract_amount": {
          "title": "Contract amount",
          "type": "number",
          "readOnly": true
        },
        "contract_currency": {
          "title": "Contract currency",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "initiator": {
          "$ref": "#/definitions/User"
        },
        "other_party": {
          "title": "Other party",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "title": "Status",
          "type": "string",
          "enum": ["OPEN", "IN_PROGRESS", "ESCALATED", "RESOLVED", "CLOSED"],
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "last_response_time": {
          "title": "Last response time",
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-nullable": true
        },
        "escalated_at": {
          "title": "Escalated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-nullable": true
        },
        "resolution_deadline": {
          "title": "Resolution deadline",
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-nullable": true
        },
        "admin_resolution": {
          "title": "Admin resolution",
          "type": "string",
          "readOnly": true,
          "minLength": 1,
          "x-nullable": true
        },
        "admin_resolved_by": {
          "title": "Admin resolved by",
          "type": "integer",
          "readOnly": true,
          "x-nullable": true
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DisputeMessage"
          },
          "readOnly": true
        },
        "evidence": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DisputeEvidence"
          },
          "readOnly": true
        },
        "time_remaining": {
          "title": "Time remaining",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DisputeCreate": {
      "required": ["contract"],
      "type": "object",
      "properties": {
        "contract": {
          "title": "Contract",
          "type": "integer"
        },
        "status": {
          "title": "Status",
          "type": "string",
          "enum": ["OPEN", "IN_PROGRESS", "ESCALATED", "RESOLVED", "CLOSED"],
          "readOnly": true
        }
      }
    },
    "UpdateWallet": {
      "required": ["amount", "currency", "type"],
      "type": "object",
      "properties": {
        "amount": {
          "title": "Amount",
          "type": "number"
        },
        "currency": {
          "title": "Currency",
          "type": "string",
          "enum": ["USD", "NGN", "EUR", "GBP"]
        },
        "type": {
          "title": "Type",
          "type": "string",
          "enum": ["DEBIT", "CREDIT"]
        }
      }
    }
  }
}
